;; -*- mode: outline; outline-regexp: " *[-\+]"; indent-tabs-mode: nil; fill-column: 120 -*-

^c^d hide subtree
^c^s show subtree

- redo parser
 - handle longer numbers

 - parse tokens with break in middle
  - how about fd with a chunky feed
   - create socketpair()
   - spawn thread to write (detach)
    - write chunks and exit when done
     - write, sleep just to be sure or sync

 - val parse tests
 - hash
  - key hash on each val?

 - change to use a pared down agoo debug.h

- make sure follow works

- compare other libs
 - :question: for not exactly follow by a number for comment/note
 - :x: for not supported
 - :white_check_mark: for supported or maybe :ok:
 - validate (test for these)
  - structure comma
  - structure close
  - string chars (\t in string)
  - numbers (multiple . e -)
  - big numbers accepted? (1.2e310 or int with more than 20 digits)
  - display error location?
 - can get complete values as native types (array and object should be iteratable)
 - big numbers
 - long double or maybe precision (80 bit vs 64)
 - save for later (how to do with others?)
 - multiple json in one file (any allowable format)
 - multiple with one json per line
 - small file (under 4G)
 - medium file (over 4G)
 - large file (larger than memory)
- performance (speed and memory use)
 - validate (no checking that values were extracted) (mark as not really validated if compare shows invalid are not detected)
 - single file as string (patient)
 - mutiple file (small)
 - mutiple file (4G)
 - mutiple file (large)
 - build/modify
 - to string
 - write

- TBD stream write functions someday
